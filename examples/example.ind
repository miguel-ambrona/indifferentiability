(* 3-rounds Feistel Network *)

S := {0,1}^n.

rounds F1,F2,F3 : S -> S.

oracle R : S x S -> S x S.

R (x0,x1) :=
  v1 = F1(x1);
  x2 = x0 + v1;

  v2 = F2(x2);
  x3 = x1 + v2;

  v3 = F3(x3);
  x4 = x2 + v3;
  return x3,x4.

attacker :=
  x1 <-$ S;
  x2 <-$ S;
  v1 = F2(x2);
  v2 = F1(x1);
  x0 = x2 + v2;
  x3 = x1 + v1;
  v3 = F3(x3);
  x4 = x2 + v3;
  (v5,v4) = R(x0,x1);
  check v1 == v2;
  check v4 == x4;
  check v4 == 0;
  check v2 <> 0;
  check v1 <> 0.
